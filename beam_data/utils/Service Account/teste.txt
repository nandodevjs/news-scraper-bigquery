Desafio de Codificação Esta página consiste em um desafio de codificação para funções de Engenharia de Dados.
Propósito O objetivo deste teste é triplo:
* Avaliar suas habilidades de codificação
* Julgar sua experiência técnica
* Entender como você projeta uma solução
Como você será avaliado Você será avaliado em:
* Padrão de codificação, comentários e estilo
* Design geral da solução
* Uso apropriado do controle de versão
Instruções Por favor, crie uma conta gratuita no GCP: https://cloud.google.com/free 
O candidato deve colocar os resultados do teste em um repositório de código público hospedado no Github 
Uma vez que o teste estiver completo, por favor compartilhe o URL do repositório do Github com a equipe de contratação para que eles possam revisar seu trabalho 
Você está construindo uma aplicação backend e nenhuma interface de usuário é necessária.
A entrada pode ser fornecida usando um arquivo de configuração ou linha de comando.
Desafio - Coleta e Armazenamento de Conteúdo de Notícias Crie uma solução que rastreie artigos de um site de notícias, limpe a resposta, armazene no BigQuery (bônus) e torne disponível para busca via uma API.
Detalhes Escreva uma aplicação para rastrear um site de notícias online, por exemplo, www.theguardian.com/au ou www.bbc.com usando um framework de rastreamento como Scrapy. 
Você pode usar um framework de rastreamento de sua escolha e construir a aplicação em Python. 
A aplicação deve limpar os artigos para obter apenas as informações relevantes para a notícia, por exemplo, texto do artigo, autor, manchete, URL do artigo, etc. 
Use um framework como Readability para limpar a página de conteúdo supérfluo como publicidade e HTML 
Armazene os dados no BigQuery, para posterior busca e recuperação. 
Certifique-se de que a URL do artigo está incluída para permitir a comparação com o original.
Bônus Escreva uma API que forneça acesso ao conteúdo no banco de dados BigQuery. 
O usuário deve ser capaz de buscar artigos por palavra-chave.




Critérios de Aceite
1. Coleta de Artigos:
   * A aplicação deve ser capaz de rastrear e coletar artigos de um site de notícias especificado.
   * Os artigos devem ser extraídos de forma automatizada.
2. Limpeza de Dados:
   * A aplicação deve limpar os artigos, removendo conteúdos desnecessários como publicidade e HTML supérfluo.
   * Os dados relevantes devem incluir texto do artigo, autor, manchete e URL do artigo.
3. Armazenamento:
   * Os dados extraídos e limpos devem ser armazenados no Google BigQuery.
   * A URL do artigo deve ser incluída no armazenamento.
4. Acesso via API:
   * A aplicação deve fornecer uma API que permita buscar artigos armazenados no BigQuery por palavra-chave.
   * A API deve ser bem documentada e fácil de usar.
5. Controle de Versão:
   * Todo o código deve ser versionado e hospedado em um repositório público no GitHub.
   * O repositório deve incluir instruções claras sobre como configurar e executar a aplicação.
Critérios de Feito
1. Configuração Inicial:
   * Conta gratuita no GCP criada.
   * Repositório público no GitHub criado com a estrutura inicial do projeto.
2. Rastreamento de Artigos:
   * Framework de rastreamento configurado (e.g., Scrapy).
   * Capacidade de rastrear e extrair dados de um site de notícias validada com alguns exemplos de artigos extraídos.
3. Limpeza de Dados:
   * Implementação de um processo de limpeza dos artigos usando um framework apropriado (e.g., Readability).
   * Testes realizados para garantir que os dados extraídos estão limpos e contêm as informações relevantes.
4. Armazenamento no BigQuery:
   * Configuração do BigQuery no GCP.
   * Script ou módulo implementado para armazenar dados no BigQuery.
   * Testes realizados para garantir que os dados estão sendo armazenados corretamente.
5. API de Busca:
   * API implementada usando um framework como Flask ou FastAPI.
   * Endpoint de busca por palavra-chave funcional e testado.
   * Documentação da API criada e disponibilizada no repositório GitHub.
Critérios de Preparado
1. Configuração do Ambiente:
   * Instruções detalhadas para configuração do ambiente de desenvolvimento e execução da aplicação.
   * Listagem de dependências e comandos para instalação.
2. Execução do Rastreador:
   * Detalhes sobre como executar o rastreador para coletar artigos.
   * Exemplos de comandos de linha de comando ou arquivo de configuração para iniciar o rastreamento.
3. Processo de Limpeza:
   * Descrição do processo de limpeza de dados implementado.
   * Explicação de como o framework escolhido (e.g., Readability) é utilizado na aplicação.
4. Armazenamento de Dados:
   * Instruções sobre como configurar o BigQuery para receber os dados.
   * Detalhes sobre o esquema do BigQuery e como os dados são armazenados.
5. Uso da API:
   * Documentação detalhada da API com exemplos de uso.
   * Explicação dos endpoints disponíveis e como realizar buscas por palavra-chave.
6. Controle de Versão:
   * Histórico de commits no GitHub mostrando o progresso do desenvolvimento.
   * Uso adequado de branches, commits e pull requests para organização do código.